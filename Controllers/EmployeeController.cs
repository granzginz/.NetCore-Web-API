using Microsoft.AspNetCore.Hosting;using Microsoft.AspNetCore.Mvc;using Microsoft.Extensions.Configuration;using MyAppAPI.Model;using System;using System.Data;using System.Data.SqlClient;using System.IO;namespace MyAppAPI.Controllers{    [Route("api/[controller]")]    [ApiController]    public class EmployeeController : ControllerBase    {        //Depedency Injection        //Begin        private readonly IConfiguration _configuration;        private readonly IWebHostEnvironment _env;        //End Depedency Injection        public EmployeeController(IConfiguration configuration, IWebHostEnvironment env)        {            _configuration = configuration;            _env = env;        }        [HttpGet]        public JsonResult Get()        {            string query = @"                SELECT [EmployeeId]      ,[EmployeeName]      ,[Department]      ,convert(varchar(10) ,[DateOfJoining], 120) as DateOfJoining      ,[PhotoFileName]  FROM [dbo].[Employee]";            DataTable table = new DataTable();            string sqlDataSource = _configuration.GetConnectionString("EmployeeAppCon");            SqlDataReader myReader;            using (SqlConnection con = new SqlConnection(sqlDataSource))            {                con.Open();                using (SqlCommand mCommand = new SqlCommand(query, con))                {                    myReader = mCommand.ExecuteReader();                    table.Load(myReader);                    myReader.Close();                    con.Close();                }            }            return new JsonResult(table);        }        [HttpPost]        public JsonResult Post(Employee e)        {            string query = @"INSERT INTO [dbo].[Employee]           ([EmployeeName]           ,[Department]           ,[DateOfJoining]           ,[PhotoFileName])     VALUES           ('" + e.EmployeeName + @"'           ,'" + e.Department + @"'           ,'" + e.DateOfJoining + @"'           ,'" + e.PhotoFileName + @"')";            DataTable table = new DataTable();            string sqlDataSource = _configuration.GetConnectionString("EmployeeAppCon");            SqlDataReader myReader;            using (SqlConnection con = new SqlConnection(sqlDataSource))            {                con.Open();                using (SqlCommand mCommand = new SqlCommand(query, con))                {                    myReader = mCommand.ExecuteReader();                    table.Load(myReader);                    myReader.Close();                    con.Close();                }            }            return new JsonResult("Add Succesfully");        }        [HttpPut]        public JsonResult Put(Employee em)        {            string query = @"                             Update dbo.Employee set                                EmployeeName = '" + em.EmployeeName + @"'                                ,Department = '" + em.Department + @"'                                ,DateOfJoining  = '" + em.DateOfJoining + @"'                                   where EmployeeId = '" + em.EmployeeId + @"'                            ";            DataTable table = new DataTable();            string sqlDataSource = _configuration.GetConnectionString("EmployeeAppCon");            SqlDataReader myReader;            using (SqlConnection con = new SqlConnection(sqlDataSource))            {                con.Open();                using (SqlCommand mCommand = new SqlCommand(query, con))                {                    myReader = mCommand.ExecuteReader();                    table.Load(myReader);                    myReader.Close();                    con.Close();                }            }            return new JsonResult("Update Succesfully");        }        [HttpDelete("{id}")]        public JsonResult Delete(int id)        {            string query = @"                             delete from dbo.Employee                                   where EmployeeId = '" + id + @"'                            ";            DataTable table = new DataTable();            string sqlDataSource = _configuration.GetConnectionString("EmployeeAppCon");            SqlDataReader myReader;            using (SqlConnection con = new SqlConnection(sqlDataSource))            {                con.Open();                using (SqlCommand mCommand = new SqlCommand(query, con))                {                    myReader = mCommand.ExecuteReader();                    table.Load(myReader);                    myReader.Close();                    con.Close();                }            }            return new JsonResult("Delete Succesfully");        }        [Route("SaveFile")]        [HttpPost]        public JsonResult SaveFile()        {            try            {                var httpRequest = Request.Form;                var postedFile = httpRequest.Files[0];                string filename = postedFile.FileName;                var physicalPath = _env.ContentRootPath + "/Photos/" + filename;                using (var stream = new FileStream(physicalPath, FileMode.Create))                {                    postedFile.CopyTo(stream);                }                return new JsonResult(filename);            }            catch (Exception)            {                return new JsonResult("anonymous.png");            }        }        [Route("GetAllDepartmentNames")]        public JsonResult GetAllDepartmentNames()        {            string query = @"                SELECT DepartmentName from dbo.department";            DataTable table = new DataTable();            string sqlDataSource = _configuration.GetConnectionString("EmployeeAppCon");            SqlDataReader myReader;            using (SqlConnection con = new SqlConnection(sqlDataSource))            {                con.Open();                using (SqlCommand mCommand = new SqlCommand(query, con))                {                    myReader = mCommand.ExecuteReader();                    table.Load(myReader);                    myReader.Close();                    con.Close();                }            }            return new JsonResult(table);        }    }}